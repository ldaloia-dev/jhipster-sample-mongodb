package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FooAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFooAllPropertiesEquals(Foo expected, Foo actual) {
        assertFooAutoGeneratedPropertiesEquals(expected, actual);
        assertFooAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFooAllUpdatablePropertiesEquals(Foo expected, Foo actual) {
        assertFooUpdatableFieldsEquals(expected, actual);
        assertFooUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFooAutoGeneratedPropertiesEquals(Foo expected, Foo actual) {
        assertThat(actual)
            .as("Verify Foo auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFooUpdatableFieldsEquals(Foo expected, Foo actual) {
        assertThat(actual)
            .as("Verify Foo relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getStart()).as("check start").isEqualTo(expected.getStart()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFooUpdatableRelationshipsEquals(Foo expected, Foo actual) {
        assertThat(actual)
            .as("Verify Foo relationships")
            .satisfies(a -> assertThat(a.getDummy()).as("check dummy").isEqualTo(expected.getDummy()));
    }
}
